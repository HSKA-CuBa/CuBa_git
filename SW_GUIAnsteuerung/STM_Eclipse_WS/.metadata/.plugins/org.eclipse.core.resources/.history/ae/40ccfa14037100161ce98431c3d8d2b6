/* Communication Komponent
 *
 * Created on: 16.08.2016
 * Author: Alexander Schleicher
 * From Foundation of Michael Meindl
 */

#ifndef INCLUDE_SCOMMCOMPONENT_H_
#define INCLUDE_SCOMMCOMPONENT_H_

#include "CMessage.h"
#include "AComponentBase.h"
#include "Config.h"
#include "TUSART.h"
#include "CTxBufferList.h"
#include "CRxBufferList.h"



class SCommComponent : public AComponentBase
{
public:
	static SCommComponent& getInstance();
	SCommComponent(const SCommComponent&) = delete;
	SCommComponent& operator=(const SCommComponent&) = delete;
	~SCommComponent() = default;

	void onUSARTIRQ();
	bool dispatch(const CMessage& msg) override;

private:
	SCommComponent();
	static SCommComponent* sInstance;
	TUSART<ERegister::rUSART1> mUSART;
	CTxBufferList mTxBuffer;
	CRxBufferList mRxBuffer;
};


#endif
