//12.9.16, Michael Meindl
#include "CControlComponent.h"
#include <iostream>
#include <unistd.h>

CControlComponent::CControlComponent(TQueue<Config::QueueSize>& rxQueue,
									 TQueue<Config::QueueSize>& txQueue) :
									 	 AComponentBase(rxQueue, txQueue, true)
{

}
void CControlComponent::init()
{
	std::cout << "Control-Component: init()" << std::endl;
}
void CControlComponent::run()
{
	CMessage msg;
	while(true)
	{
		if(true == mStandbyState)
		{
			if(mRxQueue.getMessage(msg, true))
			{
				if(msg.getEvent() == EEvent::EV_REQUEST_RUN)
				{
					std::cout << "Control-Component: Switching from standby to running." << std::endl;
					mStandbyState = false;
				}
			}
		}
		else
		{
			sleep(3);
			std::cout << "Control-Component: Transmitting sensor data." << std::endl;
			msg = CMessage(EEvent::EV_REQUEST_TX_SENSORDATA,
						   EDataType::SENSOR_DATA,
						   CSensorData(0.0F, 1.0F, 2.0F, 3.0F, 4.0F, 5.0F, 6.0F));
			if(mTxQueue.addMessage(msg, false))
			{
				std::cout << "Control-Component: Transmitted sensor data correctly." << std::endl;
			}
		}
	}
}
