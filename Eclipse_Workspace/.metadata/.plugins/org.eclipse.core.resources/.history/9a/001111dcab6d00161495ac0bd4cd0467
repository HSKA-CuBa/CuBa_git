#include "CSTMHardware.h"
#include "CSensorEvaluation.h"
#include "CComplementaryFilter.h"
#include "TKalmanFilter.h"
#include "CLQR.h"

UInt32 tick = 0U;

extern "C"
{
void SysTick_Handler()
{
	HAL_IncTick();
	tick++;
}
}

void main();
void main()
{
	CSTMHardware hw;
	CSensorEvaluation sensorEval;
	CComplementaryFilter compFilter;
	CLQR lqr;

	float phi 		= 0.0F;
	float phi_d 	= 0.0F;
	float psi_d		= 0.0F;
	float torque 	= 0.0F;

	while (1)
	{
	   if(tick >= 20.0U)
	   {
		   tick = 0U;

		   phi = sensorEval.calcPhi(hw.getX1__dd_raw(),
				   	   	   	   	    hw.getX2__dd_raw(),
									hw.getY1__dd_raw(),
									hw.getY2__dd_raw());
		   phi_d = sensorEval.calcPhi__d(hw.getPhi1__dd_raw(),
				   	   	   	   	   	   	 hw.getPhi2__dd_raw());
	   }
	}
}
