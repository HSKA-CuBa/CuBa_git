/**
 * @file	AComponentBase.h
 * @author	Michael Meindl
 * @date	28.9.2016
 * @brief	Abstract class definition for the different components.
 */
#ifndef ACOMPONENTBASE_H
#define ACOMPONENTBASE_H
#include "IRunnable.h"
#include "TQueue.h"
#include "Config.h"

class CProxy;

class AComponentBase : public IRunnable
{
public:
	virtual void init() override =0;
	void run() override;
	bool setProxyPtr(CProxy& proxy);
public:
	AComponentBase();
	AComponentBase(const AComponentBase&) = delete;
	AComponentBase& operator=(const AComponentBase&) = delete;
	~AComponentBase() = default;
private:
	TQueue<Config::sQueueSize> mQueue;
	CProxy* mProxyPtr;
};

#endif
