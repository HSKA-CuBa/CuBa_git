/**
 * @file	CCommComponent.h
 * @author	Michael Meindl
 * @date	28.9.2016
 * @brief	Class definition for the comm-component.
 */
#ifndef CCOMMCOMPONENT_H
#define CCOMMCOMPONENT_H
#include "AComponentBase.h"
#include "CServer.h"
#include "CThread.h"
#include "CReceiveTask.h"

class CCommComponent : public AComponentBase
{
public:
	/**
	 * Initialize the TCP/IP-Server.
	 */
	void init() override;
	/**
	 * Run the comm component.
	 */
	void run() override;
private:
	/**
	 * Method to handle the received messages.
	 * param[in] msg	Message to process.
	 * return			Specifies whether the event was consumed.
	 */
	bool dispatch(CMessage& msg);
public:
	CCommComponent();
	CCommComponent(const CCommComponent&) = delete;
	CCommComponent& operator=(const CCommComponent&) = delete;
	~CCommComponent() = default;
private:
	bool mConnectedFlag;
	CServer mServer;
	CReceiveTask mReceiveTask;
	CThread mReceiveThread;
};

#endif
