/**
 * @file	CDoublePuffer.h
 * @author	Michael Meindl
 * @date	25.9.2016
 * @brief	Class definition for a double puffer.
 */
#ifndef CDOUBLEPUFFER_H
#define CDOUBLEPUFFER_H
#include "CContainer.h"
#include "CBinarySemaphore.h"

/**
 * Class holding two containers.
 */
class CDoublePuffer
{
public:
	bool setData(bool waitForever,
				 CContainer::CPhiValues& phiValues,
				 CContainer::CPhi__dValues& phi__dValues,
				 CContainer::CPsi__dValues& psi__dValues);
	bool getData(bool waitForever,
				 CContainer::CPhiValues& phiValues,
				 CContainer::CPhi__dValues& phi__dValues,
				 CContainer::CPsi__dValues& psi__dValues);
public:
	CDoublePuffer();
	CDoublePuffer(const CDoublePuffer&) = delete;
	CDoublePuffer& operator=(const CDoublePuffer&) = delete;
	~CDoublePuffer();
private:
	CContainer mReadContainer;
	CContainer mWriteContainer;
	CBinarySemaphore mReadSemaphore;		/// Signals whether data can be read.
	CBinarySemaphore mSwitchSemaphore;		/// Signals whether data can be switched from the write to read container.
};

#endif
